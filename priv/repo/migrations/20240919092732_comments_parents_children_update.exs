defmodule Conga.Repo.Migrations.CommentsParentsChildrenUpdate do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    rename table(:comments), :comment_id, to: :parent_comment_id

    drop constraint(:comments, "comments_comment_id_fkey")

    drop_if_exists unique_index(:comments, [:user_id, :post_id, :comment_id],
                     name: "comments_unique_user_comment_and_post_index"
                   )

    alter table(:comments) do
      modify :parent_comment_id,
             references(:comments,
               column: :id,
               name: "comments_parent_comment_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    execute(
      "ALTER TABLE comments alter CONSTRAINT comments_parent_comment_id_fkey NOT DEFERRABLE"
    )

    create unique_index(:comments, [:user_id, :post_id, :parent_comment_id],
             name: "comments_unique_user_comment_and_post_index"
           )
  end

  def down do
    drop_if_exists unique_index(:comments, [:user_id, :post_id, :parent_comment_id],
                     name: "comments_unique_user_comment_and_post_index"
                   )

    drop constraint(:comments, "comments_parent_comment_id_fkey")

    alter table(:comments) do
      modify :comment_id,
             references(:comments,
               column: :id,
               name: "comments_comment_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    create unique_index(:comments, [:user_id, :post_id, :comment_id],
             name: "comments_unique_user_comment_and_post_index"
           )

    rename table(:comments), :parent_comment_id, to: :comment_id
  end
end
